-- Exercise 1

-- Using any methods you like determine if you can
-- you trust this events table

SELECT 
  COUNT(*) AS events,
  (
    SELECT
      COUNT(*)
    FROM
      dsv1069.events
  ) AS total_events
FROM
  dsv1069.events_201701


-- Exercise 2

-- Using any methods you like, determine if you
-- can you trust this events table. (HINT: When did
-- we start recording events on mobile)

-- SELECT * FROM dsv1069.events_ex2

SELECT
  COUNT(*) AS events,
  platform,
  MIN(event_time)
FROM
  dsv1069.events_ex2
GROUP BY platform


-- Exercise 3

-- Imagine that you need to count item views by
-- day. You found this table item_views_by_category_temp
-- - should you use it to answer your questiuon?

SELECT * FROM dsv1069.item_views_by_category_temp

-- No we cannot use this table for the given task.
-- The time stamp is not available in this table
-- and thus cannot be used to count item views by day.

-- Exercise 4

-- Using any methods you like, decide if this table
-- is ready to be used as a source of truth.

SELECT * FROM dsv1069.raw_events
LIMIT 100

-- No, we cannot. raw_events doesn't exists in the schema.


-- Exercise 5

-- Is this the right way to join orders to users?

-- SELECT *
-- FROM dsv1069.orders
-- JOIN dsv1069.users
-- ON orders.user_id = users.parent_user_id

-- No, this is not the right way. COALESCE function needs
-- to be used here.

SELECT
  *
FROM
  dsv1069.orders
  JOIN dsv1069.users ON orders.user_id = COALESCE(users.parent_user_id, users.id)